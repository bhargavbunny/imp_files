{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "AWS CloudFormation Sample Template myBB_Multi_AZ: Create a highly available, scalable myBB installation",

	"Mappings": {
		"Region2VpcCidr": {


			"us-east-1": {
				"PrivateSubnet1Cidr": "10.1.200.0/24",
				"PrivateSubnet2Cidr": "10.1.201.0/24",
				"PublicSubnet1Cidr": "10.1.100.0/24",
				"PublicSubnet2Cidr": "10.1.101.0/24",
				"VpcCidr": "10.1.0.0/16"
			}

		}
	},


	"Parameters": {

		"NetworkName": {
			"Description": "The name of the network that will be used to tag all resources in the VPC",
			"Type": "String",
			"Default": "cybage_ALM_bhargav_Network"
		},

		"VPCAvailabilityZone1": {
			"Default": "us-east-1a",
			"Description": "One of two Availability Zones that will be used to create subnets.",
			"MaxLength": "255",
			"MinLength": "1",
			"Type": "String"
		},
		"VPCAvailabilityZone2": {
			"Default": "us-east-1b",
			"Description": "Two of two Availability Zones that will be used to create subnets. Must be different than VPCAvailabilityZone2.",
			"MaxLength": "255",
			"MinLength": "1",
			"Type": "String"
		},
			"SSHLocation": {
			"AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
			"ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
			"Default": "0.0.0.0/0",
			"Description": " The IP address range that can be used to SSH to the EC2 instances",
			"MaxLength": "18",
			"MinLength": "9",
			"Type": "String"
		}

	},


	"Resources": {

		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Fn::FindInMap": ["Region2VpcCidr", {
						"Ref": "AWS::Region"
					}, "VpcCidr"]
				},
				"Tags": [{
						"Key": "Network",
						"Value": {
							"Fn::Join": ["-", [{
								"Ref": "NetworkName"
							}, {
								"Ref": "AWS::Region"
							}]]
						}
					}, {
						"Key": "Scheme",
						"Value": "PublicAndPrivate"
					},
					{
						"Key": "Name",
						"Value": "cybage_alm_bhargav_vpc"
					}
				]
			}
		},
		"PublicSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::FindInMap": ["Region2VpcCidr", {
						"Ref": "AWS::Region"
					}, "PublicSubnet1Cidr"]
				},
				"MapPublicIpOnLaunch": true,
				"AvailabilityZone": {
					"Ref": "VPCAvailabilityZone1"
				},
				"Tags": [{
						"Key": "Network",
						"Value": {
							"Fn::Join": ["-", [{
								"Ref": "NetworkName"
							}, {
								"Ref": "AWS::Region"
							}]]
						}
					}, {
						"Key": "Network",
						"Value": "Public"
					},
					{
						"Key": "Name",
						"Value": "cybage_alm_bhargav_publicsubnet"
					}
				]
			}
		},

		"PublicSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Fn::FindInMap": ["Region2VpcCidr", {
						"Ref": "AWS::Region"
					}, "PublicSubnet2Cidr"]
				},
				"MapPublicIpOnLaunch": true,
				"AvailabilityZone": {
					"Ref": "VPCAvailabilityZone2"
				},
				"Tags": [{
						"Key": "Network",
						"Value": {
							"Fn::Join": ["-", [{
								"Ref": "NetworkName"
							}, {
								"Ref": "AWS::Region"
							}]]
						}
					}, {
						"Key": "Network",
						"Value": "Public"
					},
					{
						"Key": "Name",
						"Value": "cybage_alm_bhargav_publicsubnet2"
					}
				]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
						"Key": "Network",
						"Value": {
							"Fn::Join": ["-", [{
								"Ref": "NetworkName"
							}, {
								"Ref": "AWS::Region"
							}]]
						}
					}, {
						"Key": "Network",
						"Value": "Public"
					},
					{
						"Key": "Name",
						"Value": "cybage_alm_bhargav_internetgateway"
					}
				]
			}
		},

		"GatewayToInternet": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"PublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
						"Key": "Network",
						"Value": {
							"Fn::Join": ["-", [{
								"Ref": "NetworkName"
							}, {
								"Ref": "AWS::Region"
							}]]
						}
					}, {
						"Key": "Network",
						"Value": "Public"
					},
					{
						"Key": "Name",
						"Value": "cybage_alm_bhargav_publicroutetable"
					}
				]
			}
		},

		"PublicRoute": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "GatewayToInternet",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},

		"PublicSubnet1RouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet1"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},

		"PublicSubnet2RouteTableAssociation": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet2"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},


		"InboundHTTPPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Fn::GetAtt": ["VPC", "DefaultNetworkAcl"]
				},
				"RuleNumber": "101",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "8083",
					"To": "8083"
				}
			}
		},

		"InboundHTTPsPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Fn::GetAtt": ["VPC", "DefaultNetworkAcl"]
				},
				"RuleNumber": "102",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "8080",
					"To": "8080"
				}
			}
		},

		"InboundSSHPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Fn::GetAtt": ["VPC", "DefaultNetworkAcl"]
				},
				"RuleNumber": "103",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "false",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "22",
					"To": "22"
				}
			}
		},


		"OutboundPublicNetworkAclEntry": {
			"Type": "AWS::EC2::NetworkAclEntry",
			"Properties": {
				"NetworkAclId": {
					"Fn::GetAtt": ["VPC", "DefaultNetworkAcl"]
				},
				"RuleNumber": "101",
				"Protocol": "6",
				"RuleAction": "allow",
				"Egress": "true",
				"CidrBlock": "0.0.0.0/0",
				"PortRange": {
					"From": "0",
					"To": "65535"
				}
			}
		},
		"SecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "Enable HTTP access via port 80 locked down to the ELB and SSH access",
				"VpcId": {
					"Ref": "VPC"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "tcp",
						"FromPort": "8080",
						"ToPort": "8080",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "80",
						"ToPort": "80",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "22",
						"ToPort": "22",
						"CidrIp": {
							"Ref": "SSHLocation"
						}
					}
				],"Tags": [{
						"Key": "Network",
						"Value": {
							"Fn::Join": ["-", [{
								"Ref": "NetworkName"
							}, {
								"Ref": "AWS::Region"
							}]]
						}
					}, {
						"Key": "Network",
						"Value": "Public"
					},
					{
						"Key": "Name",
						"Value": "cybage_alm_bhargav_security"
					}
				]
			}
		}
	}
}